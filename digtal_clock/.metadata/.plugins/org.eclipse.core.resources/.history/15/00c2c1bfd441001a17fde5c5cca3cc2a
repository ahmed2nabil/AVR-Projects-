/*
 * digc.c
 *
 *  Created on: Jan 28, 2020
 *      Author: 20114
 */
#include<avr/io.h>
#include<util/delay.h>
unsigned char g_counter=0;
unsigned char g_tick=0;
unsigned char g_sec=0;
unsigned char g_min=0;
unsigned char g_hour=0;
#define NUMBER_OF_OVERFLOWS_PER_SECOND 4


/* Description :
 * For clock=1Mhz and prescale F_CPU/1024 every count will take 1ms
 * so put initial timer counter=0  0 --> 255 (256ms per overflow)
 * so we need timer to overflow 4 times to get a second
 */
void timer0_init_ovf(void){
	/* Configure the timer control register
		 * 1. Non PWM mode FOC0=1
		 * 2. Normal Mode WGM01=0 & WGM00=0
		 * 3. Normal Mode COM00=0 & COM01=0
		 * 4. clock = F_CPU/1024 CS00=1 CS01=0 CS02=1
		 */
	TCCR0= (1<<FOC0)|(1<<CS02) | (1<<CS00);
	TCNT0=0;
	TIMSK= (1<<TOIE0);
}
int main(){
	DDRC = 0xFF;
PORTC =0xF0;
DDRA=0xFF;
PORTA= 0x00;
while(1){

	for (int i=1;i<6;i++){
		PORTA = (PORTA & 0xF0) | (i & 0x0F);
	PORTC = (PORTC & 0xF0) | (g_counter & 0x0F);
	if (g_counter==9){
		g_counter=0;
	}
	else{
		counter++;
	}
	_delay_ms(500);
}
}
}
